{"definitions": {"Token": {"type": "object", "properties": {"access_token": {"type": "string"}}}, "Order": {"type": "object", "properties": {"payment_mode": {"type": "string"}, "identifier": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}, "amount": {"example": 0.0, "type": "number", "format": "float"}, "paid_via": {"type": "string"}, "invoice_number": {"type": "string"}, "status": {"type": "string"}, "completed_at": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}}}, "EventVersion": {"type": "object", "properties": {"sponsors_ver": {"example": 0, "type": "integer", "format": "int"}, "microlocations_ver": {"example": 0, "type": "integer", "format": "int"}, "tracks_ver": {"example": 0, "type": "integer", "format": "int"}, "sessions_ver": {"example": 0, "type": "integer", "format": "int"}, "speakers_ver": {"example": 0, "type": "integer", "format": "int"}, "event_ver": {"example": 0, "type": "integer", "format": "int"}}}, "Speaker": {"required": ["country", "email", "id", "name", "organisation"], "type": "object", "properties": {"featured": {"example": false, "type": "boolean"}, "photo": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "facebook": {"type": "string"}, "sessions": {"type": "array", "items": {"$ref": "#/definitions/SpeakerSession"}}, "country": {"type": "string"}, "twitter": {"type": "string"}, "organisation": {"type": "string"}, "position": {"type": "string"}, "short_biography": {"type": "string"}, "mobile": {"type": "string"}, "name": {"type": "string"}, "email": {"example": "email@domain.com", "type": "string", "format": "email"}, "linkedin": {"type": "string"}, "long_biography": {"type": "string"}, "website": {"example": "http://website.com", "type": "string", "format": "uri"}, "github": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}}}, "User": {"required": ["email"], "type": "object", "properties": {"signup_time": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "last_access_time": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "email": {"example": "email@domain.com", "type": "string", "format": "email"}, "id": {"example": 0, "type": "integer", "format": "int"}, "user_detail": {"$ref": "#/definitions/UserDetail"}}}, "MicrolocationPaginated": {"type": "object", "properties": {"results": {"type": "array", "items": {"$ref": "#/definitions/Microlocation"}}, "next": {"type": "string"}, "count": {"type": "integer"}, "start": {"type": "integer"}, "limit": {"type": "integer"}, "previous": {"type": "string"}}}, "TrackPost": {"required": ["color", "name"], "type": "object", "properties": {"name": {"type": "string"}, "location": {"type": "string"}, "color": {"example": "green", "type": "string", "format": "color"}, "track_image_url": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "description": {"type": "string"}}}, "SessionTrack": {"required": ["id"], "type": "object", "properties": {"color": {"example": "green", "type": "string", "format": "color"}, "name": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}}}, "EventComplete": {"required": ["end_time", "id", "name", "start_time"], "type": "object", "properties": {"timezone": {"type": "string"}, "sessions": {"type": "array", "items": {"$ref": "#/definitions/Session"}}, "sponsors": {"type": "array", "items": {"$ref": "#/definitions/Sponsor"}}, "latitude": {"example": 0.0, "type": "number", "format": "float"}, "identifier": {"type": "string"}, "topic": {"example": "Auto, Boat & Air", "type": "string"}, "state": {"example": "Draft", "type": "string", "default": "Draft"}, "sub_topic": {"example": "Air", "type": "string"}, "thumbnail": {"example": "http://website.com", "type": "string", "format": "uri"}, "email": {"example": "email@domain.com", "type": "string", "format": "email"}, "microlocations": {"type": "array", "items": {"$ref": "#/definitions/Microlocation"}}, "call_for_papers": {"$ref": "#/definitions/EventCFS"}, "schedule_published_on": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "location_name": {"type": "string"}, "version": {"$ref": "#/definitions/EventVersion"}, "ticket_url": {"example": "http://website.com", "type": "string", "format": "uri"}, "social_links": {"type": "array", "items": {"$ref": "#/definitions/SocialLink"}}, "searchable_location_name": {"type": "string"}, "organizer_description": {"type": "string"}, "has_session_speakers": {"example": false, "type": "boolean", "default": false}, "speakers": {"type": "array", "items": {"$ref": "#/definitions/Speaker"}}, "event_url": {"example": "http://website.com", "type": "string", "format": "uri"}, "background_image": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "description": {"type": "string"}, "tickets": {"type": "array", "items": {"$ref": "#/definitions/Ticket"}}, "copyright": {"$ref": "#/definitions/EventCopyright"}, "code_of_conduct": {"type": "string"}, "tracks": {"type": "array", "items": {"$ref": "#/definitions/Track"}}, "end_time": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "logo": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "longitude": {"example": 0.0, "type": "number", "format": "float"}, "privacy": {"example": "public", "type": "string"}, "start_time": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "organizer_name": {"type": "string"}, "type": {"example": "Appearance or Signing", "type": "string"}, "name": {"type": "string"}, "large": {"example": "http://website.com", "type": "string", "format": "uri"}, "creator": {"$ref": "#/definitions/EventCreator"}, "id": {"example": 0, "type": "integer", "format": "int"}}}, "SpeakerPaginated": {"type": "object", "properties": {"results": {"type": "array", "items": {"$ref": "#/definitions/Speaker"}}, "next": {"type": "string"}, "count": {"type": "integer"}, "start": {"type": "integer"}, "limit": {"type": "integer"}, "previous": {"type": "string"}}}, "ValidationError": {"type": "object", "properties": {"code": {"example": 400, "type": "integer"}, "status": {"example": "INVALID_FIELD", "type": "string"}, "message": {"type": "string"}, "field": {"type": "string"}}}, "EventPost": {"required": ["end_time", "name", "start_time"], "type": "object", "properties": {"timezone": {"type": "string"}, "ticket_url": {"example": "http://website.com", "type": "string", "format": "uri"}, "identifier": {"type": "string"}, "topic": {"example": "Auto, Boat & Air", "type": "string"}, "state": {"example": "Draft", "type": "string", "default": "Draft"}, "sub_topic": {"example": "Air", "type": "string"}, "thumbnail": {"example": "http://website.com", "type": "string", "format": "uri"}, "email": {"example": "email@domain.com", "type": "string", "format": "email"}, "call_for_papers": {"$ref": "#/definitions/EventCFS"}, "schedule_published_on": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "location_name": {"type": "string"}, "latitude": {"example": 0.0, "type": "number", "format": "float"}, "searchable_location_name": {"type": "string"}, "organizer_description": {"type": "string"}, "has_session_speakers": {"example": false, "type": "boolean", "default": false}, "copyright": {"$ref": "#/definitions/EventCopyright"}, "event_url": {"example": "http://website.com", "type": "string", "format": "uri"}, "background_image": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "description": {"type": "string"}, "start_time": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "code_of_conduct": {"type": "string"}, "end_time": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "logo": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "longitude": {"example": 0.0, "type": "number", "format": "float"}, "privacy": {"example": "public", "type": "string"}, "organizer_name": {"type": "string"}, "type": {"example": "Appearance or Signing", "type": "string"}, "name": {"type": "string"}, "large": {"example": "http://website.com", "type": "string", "format": "uri"}}}, "EventCFS": {"type": "object", "properties": {"privacy": {"example": "public", "type": "string"}, "timezone": {"type": "string"}, "start_date": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "announcement": {"type": "string"}, "end_date": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}}}, "SessionMicrolocation": {"required": ["id"], "type": "object", "properties": {"name": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}}}, "NotificationPost": {"required": ["email"], "type": "object", "properties": {"title": {"type": "string"}, "received_at": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "message": {"type": "string"}, "email": {"type": "string"}, "action": {"type": "string"}}}, "Session": {"required": ["end_time", "id", "start_time", "title"], "type": "object", "properties": {"short_abstract": {"type": "string"}, "microlocation": {"$ref": "#/definitions/SessionMicrolocation"}, "session_type": {"$ref": "#/definitions/SessionType"}, "language": {"example": "German", "type": "string"}, "audio": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "start_time": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "signup_url": {"example": "http://website.com", "type": "string", "format": "uri"}, "id": {"example": 0, "type": "integer", "format": "int"}, "title": {"type": "string"}, "state": {"example": "pending", "type": "string"}, "end_time": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "subtitle": {"type": "string"}, "speakers": {"type": "array", "items": {"$ref": "#/definitions/SessionSpeaker"}}, "track": {"$ref": "#/definitions/SessionTrack"}, "long_abstract": {"type": "string"}, "slides": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "level": {"type": "string"}, "comments": {"type": "string"}, "video": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}}}, "EventCreator": {"type": "object", "properties": {"email": {"example": "email@domain.com", "type": "string", "format": "email"}, "id": {"example": 0, "type": "integer", "format": "int"}}}, "UserPost": {"required": ["email", "password"], "type": "object", "properties": {"password": {"type": "string"}, "email": {"example": "email@domain.com", "type": "string", "format": "email"}}}, "SpeakerSession": {"type": "object", "properties": {"title": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}}}, "NotFoundError": {"type": "object", "properties": {"code": {"example": 404, "type": "integer"}, "status": {"example": "NOT_FOUND", "type": "string"}, "message": {"type": "string"}, "field": {"type": "string"}}}, "UserPut": {"required": ["email"], "type": "object", "properties": {"email": {"example": "email@domain.com", "type": "string", "format": "email"}, "user_detail": {"$ref": "#/definitions/UserDetail"}}}, "EventCopyright": {"type": "object", "properties": {"year": {"example": 0, "type": "integer", "format": "int"}, "holder_url": {"example": "http://website.com", "type": "string", "format": "uri"}, "licence_url": {"example": "http://website.com", "type": "string", "format": "uri"}, "licence": {"type": "string"}, "holder": {"type": "string"}, "logo": {"type": "string"}}}, "SponsorPaginated": {"type": "object", "properties": {"results": {"type": "array", "items": {"$ref": "#/definitions/Sponsor"}}, "next": {"type": "string"}, "count": {"type": "integer"}, "start": {"type": "integer"}, "limit": {"type": "integer"}, "previous": {"type": "string"}}}, "SponsorPost": {"required": ["name"], "type": "object", "properties": {"url": {"example": "http://website.com", "type": "string", "format": "uri"}, "sponsor_type": {"type": "string"}, "name": {"type": "string"}, "logo": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "level": {"type": "string"}, "description": {"type": "string"}}}, "SessionType": {"required": ["id", "length", "name"], "type": "object", "properties": {"name": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}, "length": {"type": "string"}}}, "Event": {"required": ["end_time", "id", "name", "start_time"], "type": "object", "properties": {"timezone": {"type": "string"}, "latitude": {"example": 0.0, "type": "number", "format": "float"}, "identifier": {"type": "string"}, "topic": {"example": "Auto, Boat & Air", "type": "string"}, "state": {"example": "Draft", "type": "string", "default": "Draft"}, "sub_topic": {"example": "Air", "type": "string"}, "name": {"type": "string"}, "email": {"example": "email@domain.com", "type": "string", "format": "email"}, "call_for_papers": {"$ref": "#/definitions/EventCFS"}, "logo": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "location_name": {"type": "string"}, "version": {"$ref": "#/definitions/EventVersion"}, "ticket_url": {"example": "http://website.com", "type": "string", "format": "uri"}, "social_links": {"type": "array", "items": {"$ref": "#/definitions/SocialLink"}}, "searchable_location_name": {"type": "string"}, "organizer_description": {"type": "string"}, "has_session_speakers": {"example": false, "type": "boolean", "default": false}, "start_time": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "event_url": {"example": "http://website.com", "type": "string", "format": "uri"}, "background_image": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "description": {"type": "string"}, "copyright": {"$ref": "#/definitions/EventCopyright"}, "code_of_conduct": {"type": "string"}, "end_time": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "schedule_published_on": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "longitude": {"example": 0.0, "type": "number", "format": "float"}, "privacy": {"example": "public", "type": "string"}, "organizer_name": {"type": "string"}, "type": {"example": "Appearance or Signing", "type": "string"}, "thumbnail": {"example": "http://website.com", "type": "string", "format": "uri"}, "large": {"example": "http://website.com", "type": "string", "format": "uri"}, "creator": {"$ref": "#/definitions/EventCreator"}, "id": {"example": 0, "type": "integer", "format": "int"}}}, "NotAuthorizedError": {"type": "object", "properties": {"code": {"example": 401, "type": "integer"}, "status": {"example": "NOT_AUTHORIZED", "type": "string"}, "message": {"type": "string"}, "field": {"type": "string"}}}, "SessionSpeaker": {"required": ["id"], "type": "object", "properties": {"city": {"type": "string"}, "organisation": {"type": "string"}, "name": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}, "sponsorship_required": {"type": "string"}, "speaking_experience": {"type": "string"}, "heard_from": {"type": "string"}}}, "Microlocation": {"required": ["id", "name"], "type": "object", "properties": {"latitude": {"example": 0.0, "type": "number", "format": "float"}, "name": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}, "room": {"type": "string"}, "floor": {"example": 0, "type": "integer", "format": "int"}, "longitude": {"example": 0.0, "type": "number", "format": "float"}}}, "InvalidServiceError": {"type": "object", "properties": {"code": {"example": 400, "type": "integer"}, "status": {"example": "INVALID_SERVICE", "type": "string"}, "message": {"type": "string"}, "field": {"type": "string"}}}, "SpeakerPost": {"required": ["country", "email", "name", "organisation"], "type": "object", "properties": {"featured": {"example": false, "type": "boolean"}, "photo": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "facebook": {"type": "string"}, "country": {"type": "string"}, "twitter": {"type": "string"}, "organisation": {"type": "string"}, "name": {"type": "string"}, "short_biography": {"type": "string"}, "mobile": {"type": "string"}, "position": {"type": "string"}, "email": {"example": "email@domain.com", "type": "string", "format": "email"}, "linkedin": {"type": "string"}, "long_biography": {"type": "string"}, "website": {"example": "http://website.com", "type": "string", "format": "uri"}, "github": {"type": "string"}}}, "SocialLinkPost": {"required": ["link", "name"], "type": "object", "properties": {"link": {"type": "string"}, "name": {"type": "string"}}}, "TrackSession": {"required": ["id"], "type": "object", "properties": {"title": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}}}, "SessionPaginated": {"type": "object", "properties": {"results": {"type": "array", "items": {"$ref": "#/definitions/Session"}}, "next": {"type": "string"}, "count": {"type": "integer"}, "start": {"type": "integer"}, "limit": {"type": "integer"}, "previous": {"type": "string"}}}, "SocialLink": {"required": ["link", "name"], "type": "object", "properties": {"link": {"type": "string"}, "name": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}}}, "Ticket": {"type": "object", "properties": {"quantity": {"example": 0, "type": "integer", "format": "int"}, "type": {"type": "string"}, "price": {"example": 0.0, "type": "number", "format": "float"}, "name": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}, "description": {"type": "string"}}}, "Notification": {"required": ["email", "id"], "type": "object", "properties": {"message": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}, "title": {"type": "string"}, "email": {"type": "string"}, "action": {"type": "string"}, "received_at": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}}}, "TicketHolder": {"type": "object", "properties": {"order": {"$ref": "#/definitions/Order"}, "email": {"example": "email@domain.com", "type": "string", "format": "email"}, "id": {"example": 0, "type": "integer", "format": "int"}, "lastname": {"type": "string"}, "firstname": {"type": "string"}, "checked_in": {"example": false, "type": "boolean"}, "ticket": {"$ref": "#/definitions/Ticket"}}}, "Login": {"required": ["email", "password"], "type": "object", "properties": {"password": {"type": "string"}, "email": {"example": "email@domain.com", "type": "string", "format": "email"}}}, "EventPaginated": {"type": "object", "properties": {"results": {"type": "array", "items": {"$ref": "#/definitions/Event"}}, "next": {"type": "string"}, "count": {"type": "integer"}, "start": {"type": "integer"}, "limit": {"type": "integer"}, "previous": {"type": "string"}}}, "SessionTypePost": {"required": ["length", "name"], "type": "object", "properties": {"length": {"type": "string"}, "name": {"type": "string"}}}, "UserDetail": {"type": "object", "properties": {"contact": {"type": "string"}, "facebook": {"type": "string"}, "twitter": {"type": "string"}, "details": {"type": "string"}, "lastname": {"type": "string"}, "firstname": {"type": "string"}, "avatar": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}}}, "Sponsor": {"required": ["id", "name"], "type": "object", "properties": {"url": {"example": "http://website.com", "type": "string", "format": "uri"}, "sponsor_type": {"type": "string"}, "id": {"example": 0, "type": "integer", "format": "int"}, "name": {"type": "string"}, "logo": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "level": {"type": "string"}, "description": {"type": "string"}}}, "TrackPaginated": {"type": "object", "properties": {"results": {"type": "array", "items": {"$ref": "#/definitions/Track"}}, "next": {"type": "string"}, "count": {"type": "integer"}, "start": {"type": "integer"}, "limit": {"type": "integer"}, "previous": {"type": "string"}}}, "UserPaginated": {"type": "object", "properties": {"results": {"type": "array", "items": {"$ref": "#/definitions/User"}}, "next": {"type": "string"}, "count": {"type": "integer"}, "start": {"type": "integer"}, "limit": {"type": "integer"}, "previous": {"type": "string"}}}, "Track": {"required": ["color", "id", "name"], "type": "object", "properties": {"sessions": {"type": "array", "items": {"$ref": "#/definitions/TrackSession"}}, "id": {"example": 0, "type": "integer", "format": "int"}, "name": {"type": "string"}, "location": {"type": "string"}, "color": {"example": "green", "type": "string", "format": "color"}, "track_image_url": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "description": {"type": "string"}}}, "SessionPost": {"required": ["end_time", "start_time", "title"], "type": "object", "properties": {"microlocation_id": {"example": 0, "type": "integer", "format": "int"}, "speaker_ids": {"type": "array", "items": {"example": 0, "type": "integer", "format": "int"}}, "short_abstract": {"type": "string"}, "state": {"example": "pending", "type": "string"}, "audio": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "start_time": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "signup_url": {"example": "http://website.com", "type": "string", "format": "uri"}, "track_id": {"example": 0, "type": "integer", "format": "int"}, "title": {"type": "string"}, "language": {"example": "German", "type": "string"}, "end_time": {"example": "2016-06-06T11:22:33", "type": "string", "format": "date-time"}, "subtitle": {"type": "string"}, "session_type_id": {"example": 0, "type": "integer", "format": "int"}, "long_abstract": {"type": "string"}, "slides": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}, "level": {"type": "string"}, "comments": {"type": "string"}, "video": {"example": "http://website.com/item.ext", "type": "string", "format": "uri"}}}, "MicrolocationPost": {"required": ["name"], "type": "object", "properties": {"floor": {"example": 0, "type": "integer", "format": "int"}, "longitude": {"example": 0.0, "type": "number", "format": "float"}, "room": {"type": "string"}, "name": {"type": "string"}, "latitude": {"example": 0.0, "type": "number", "format": "float"}}}}, "info": {"title": "Organizer Server APIs", "version": "1.0", "description": "Open Event Organizer APIs"}, "responses": {"ValidationError": {}, "NotAuthorizedError": {}, "ParseError": {"description": "When a mask can't be parsed"}, "InvalidServiceError": {}, "NotFoundError": {}, "MaskError": {"description": "When any error occurs on mask"}, "PermissionDeniedError": {}}, "swagger": "2.0", "paths": {"/events": {"get": {"summary": "List all events", "tags": ["events"], "operationId": "get_event_list", "parameters": [{"type": "string", "in": "query", "name": "privacy"}, {"type": "string", "in": "query", "name": "topic"}, {"type": "string", "in": "query", "name": "contains", "description": "Contains the string in name and description"}, {"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"type": "string", "in": "query", "name": "end_time_gt"}, {"type": "string", "in": "query", "name": "type"}, {"type": "string", "in": "query", "name": "end_time_lt"}, {"type": "string", "in": "query", "name": "time_period"}, {"type": "string", "in": "query", "name": "state"}, {"type": "string", "in": "query", "name": "sub_topic"}, {"type": "string", "in": "query", "name": "include", "description": "Comma separated list of additional fields to load. Supported: sessions,tracks,microlocations,speakers,sponsors)"}, {"type": "string", "in": "query", "name": "location"}, {"type": "string", "in": "query", "name": "start_time_gt"}, {"type": "string", "in": "query", "name": "start_time_lt"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/EventComplete"}}, "description": "Success"}}}, "post": {"summary": "Create an event", "tags": ["events"], "operationId": "post_event_list", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/EventPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/Event"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}}, "/events/page": {"get": {"summary": "List events in a paginated manner", "tags": ["events"], "operationId": "get_event_list_paginated", "parameters": [{"type": "string", "in": "query", "name": "privacy"}, {"type": "string", "in": "query", "name": "topic"}, {"type": "string", "in": "query", "name": "contains", "description": "Contains the string in name and description"}, {"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"type": "string", "in": "query", "name": "end_time_gt"}, {"type": "string", "in": "query", "name": "type"}, {"type": "string", "in": "query", "name": "end_time_lt"}, {"type": "string", "in": "query", "name": "time_period"}, {"type": "string", "in": "query", "name": "state"}, {"name": "start", "type": "integer", "in": "query", "default": 1, "description": "Serial number to start from"}, {"type": "string", "in": "query", "name": "sub_topic"}, {"name": "limit", "type": "integer", "in": "query", "default": 20, "description": "Limit on the number of results"}, {"type": "string", "in": "query", "name": "include", "description": "Comma separated list of additional fields to load. Supported: sessions,tracks,microlocations,speakers,sponsors)"}, {"type": "string", "in": "query", "name": "location"}, {"type": "string", "in": "query", "name": "start_time_gt"}, {"type": "string", "in": "query", "name": "start_time_lt"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/EventPaginated"}, "description": "Success"}}}}, "/events/{event_id}": {"delete": {"summary": "Delete an event given its id", "tags": ["events"], "operationId": "delete_event", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/Event"}, "description": "Success"}, "404": {"description": "Event not found"}}}, "get": {"summary": "Fetch an event given its id", "tags": ["events"], "operationId": "get_event", "parameters": [{"type": "string", "in": "query", "name": "include", "description": "Comma separated list of additional fields to load. Supported: sessions,tracks,microlocations,speakers,sponsors,tickets)"}, {"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/EventComplete"}, "description": "Success"}, "404": {"description": "Event not found"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id", "description": null}], "put": {"summary": "Update an event given its id", "tags": ["events"], "operationId": "put_event", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/EventPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/Event"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}}, "/events/{event_id}/attendees/": {"get": {"summary": "Get attendees of the event", "tags": ["attendees"], "operationId": "get_attendees_list", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/TicketHolder"}}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/attendees/check_in_toggle/{holder_identifier}": {"post": {"summary": "Toggle and Attendee's Checked in State", "tags": ["attendees"], "operationId": "post_attendee_check_in_toggle", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/TicketHolder"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "string", "in": "path", "name": "holder_identifier"}, {"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/attendees/check_in_toggle/{holder_identifier}/check_in": {"post": {"summary": "Check in attendee", "tags": ["attendees"], "operationId": "post_attendee_check_in", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/TicketHolder"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "string", "in": "path", "name": "holder_identifier"}, {"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/attendees/check_in_toggle/{holder_identifier}/check_out": {"post": {"summary": "Check out attendee", "tags": ["attendees"], "operationId": "post_attendee_check_out", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/TicketHolder"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "string", "in": "path", "name": "holder_identifier"}, {"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/event": {"get": {"responses": {"200": {"schema": {"$ref": "#/definitions/EventComplete"}, "description": "Success"}, "404": {"description": "Event not found"}}, "operationId": "get_event_webapp", "summary": "Fetch an event given its id", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "tags": ["events"], "description": "Alternate endpoint for fetching an event."}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id", "description": null}]}, "/events/{event_id}/links": {"get": {"summary": "List all social links", "tags": ["events"], "operationId": "get_social_link_list", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/SocialLink"}}, "description": "Success"}}}, "post": {"summary": "Create a social link", "tags": ["events"], "operationId": "post_social_link_list", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/SocialLinkPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/SocialLink"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id", "description": null}]}, "/events/{event_id}/links/{link_id}": {"delete": {"summary": "Delete a social link given its id", "tags": ["events"], "operationId": "delete_social_link", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/SocialLink"}, "description": "Success"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "link_id"}, {"required": true, "type": "integer", "in": "path", "name": "event_id"}], "put": {"summary": "Update a social link given its id", "tags": ["events"], "operationId": "put_social_link", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/SocialLinkPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/SocialLink"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}}, "/events/{event_id}/microlocations": {"get": {"summary": "List all microlocations", "tags": ["microlocations"], "operationId": "get_microlocation_list", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/Microlocation"}}, "description": "Success"}}}, "post": {"summary": "Create a microlocation", "tags": ["microlocations"], "operationId": "post_microlocation_list", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/MicrolocationPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/Microlocation"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/microlocations/page": {"get": {"summary": "List microlocations in a paginated manner", "tags": ["microlocations"], "operationId": "get_microlocation_list_paginated", "parameters": [{"name": "start", "type": "integer", "in": "query", "default": 1, "description": "Serial number to start from"}, {"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"name": "limit", "type": "integer", "in": "query", "default": 20, "description": "Limit on the number of results"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/MicrolocationPaginated"}, "description": "Success"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/microlocations/{microlocation_id}": {"delete": {"summary": "Delete a microlocation given its id", "tags": ["microlocations"], "operationId": "delete_microlocation", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Microlocation"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}}, "get": {"summary": "Fetch a microlocation given its id", "tags": ["microlocations"], "operationId": "get_microlocation", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Microlocation"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "microlocation_id"}, {"required": true, "type": "integer", "in": "path", "name": "event_id"}], "put": {"summary": "Update a microlocation given its id", "tags": ["microlocations"], "operationId": "put_microlocation", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/MicrolocationPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "200": {"schema": {"$ref": "#/definitions/Microlocation"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}}, "/events/{event_id}/notifications": {"post": {"summary": "Create user notification", "tags": ["notifications"], "operationId": "post_user_notifications", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/NotificationPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/Notification"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/orders/{identifier}": {"get": {"summary": "Get information about a ticket", "tags": ["tickets"], "operationId": "get_order", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/Order"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "string", "in": "path", "name": "identifier"}, {"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/sessions": {"get": {"summary": "List all sessions", "tags": ["sessions"], "operationId": "get_session_list", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"type": "string", "in": "query", "name": "end_time_gt"}, {"type": "string", "in": "query", "name": "end_time_lt"}, {"type": "string", "in": "query", "name": "order_by", "description": "Order by a field, example \"start_time.asc\" or \"end_time.desc\""}, {"type": "string", "in": "query", "name": "start_time_gt"}, {"type": "string", "in": "query", "name": "start_time_lt"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/Session"}}, "description": "Success"}}}, "post": {"summary": "Create a session", "tags": ["sessions"], "operationId": "post_session_list", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/SessionPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/Session"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/sessions/page": {"get": {"summary": "List sessions in a paginated manner", "tags": ["sessions"], "operationId": "get_session_list_paginated", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"type": "string", "in": "query", "name": "end_time_gt"}, {"type": "string", "in": "query", "name": "end_time_lt"}, {"type": "string", "in": "query", "name": "order_by", "description": "Order by a field, example \"start_time.asc\" or \"end_time.desc\""}, {"name": "start", "type": "integer", "in": "query", "default": 1, "description": "Serial number to start from"}, {"name": "limit", "type": "integer", "in": "query", "default": 20, "description": "Limit on the number of results"}, {"type": "string", "in": "query", "name": "start_time_gt"}, {"type": "string", "in": "query", "name": "start_time_lt"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/SessionPaginated"}, "description": "Success"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/sessions/types": {"get": {"summary": "List all session types", "tags": ["sessions"], "operationId": "get_session_type_list", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/SessionType"}}, "description": "Success"}}}, "post": {"summary": "Create a session type", "tags": ["sessions"], "operationId": "post_session_type_list", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/SessionTypePost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/SessionType"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/sessions/types/{type_id}": {"delete": {"summary": "Delete a session type given its id", "tags": ["sessions"], "operationId": "delete_session_type", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/SessionType"}, "description": "Success"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "type_id"}, {"required": true, "type": "integer", "in": "path", "name": "event_id"}], "put": {"summary": "Update a session type given its id", "tags": ["sessions"], "operationId": "put_session_type", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/SessionTypePost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/SessionType"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}}, "/events/{event_id}/sessions/{session_id}": {"delete": {"summary": "Delete a session given its id", "tags": ["sessions"], "operationId": "delete_session", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Session"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}}, "get": {"summary": "Fetch a session given its id", "tags": ["sessions"], "operationId": "get_session", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Session"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "session_id"}, {"required": true, "type": "integer", "in": "path", "name": "event_id"}], "put": {"summary": "Update a session given its id", "tags": ["sessions"], "operationId": "put_session", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/SessionPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "200": {"schema": {"$ref": "#/definitions/Session"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}}, "/events/{event_id}/speakers": {"get": {"summary": "List all speakers", "tags": ["speakers"], "operationId": "get_speaker_list", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}], "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/Speaker"}}, "description": "Success"}}}, "post": {"summary": "Create a speaker", "tags": ["speakers"], "operationId": "post_speaker_list", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/SpeakerPost"}, "in": "body", "name": "payload"}], "responses": {"400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}, "200": {"schema": {"$ref": "#/definitions/Speaker"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "201": {"description": "Resource created successfully"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/speakers/page": {"get": {"summary": "List speakers in a paginated manner", "tags": ["speakers"], "operationId": "get_speaker_list_paginated", "parameters": [{"name": "start", "type": "integer", "in": "query", "default": 1, "description": "Serial number to start from"}, {"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"name": "limit", "type": "integer", "in": "query", "default": 20, "description": "Limit on the number of results"}], "responses": {"200": {"schema": {"$ref": "#/definitions/SpeakerPaginated"}, "description": "Success"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/speakers/{speaker_id}": {"delete": {"summary": "Delete a speaker given its id", "tags": ["speakers"], "operationId": "delete_speaker", "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Speaker"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}}, "get": {"summary": "Fetch a speaker given its id", "tags": ["speakers"], "operationId": "get_speaker", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}], "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Speaker"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "speaker_id"}, {"required": true, "type": "integer", "in": "path", "name": "event_id"}], "put": {"summary": "Update a speaker given its id", "tags": ["speakers"], "operationId": "put_speaker", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/SpeakerPost"}, "in": "body", "name": "payload"}], "responses": {"400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}, "200": {"schema": {"$ref": "#/definitions/Speaker"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}}}}, "/events/{event_id}/sponsors": {"get": {"summary": "List all sponsors", "tags": ["sponsors"], "operationId": "get_sponsor_list", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/Sponsor"}}, "description": "Success"}}}, "post": {"summary": "Create a sponsor", "tags": ["sponsors"], "operationId": "post_sponsor_list", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/SponsorPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/Sponsor"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/sponsors/page": {"get": {"summary": "List sponsors in a paginated manner", "tags": ["sponsors"], "operationId": "get_sponsor_list_paginated", "parameters": [{"name": "start", "type": "integer", "in": "query", "default": 1, "description": "Serial number to start from"}, {"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"name": "limit", "type": "integer", "in": "query", "default": 20, "description": "Limit on the number of results"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/SponsorPaginated"}, "description": "Success"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/sponsors/types": {"get": {"summary": "List all sponsor types", "tags": ["sponsors"], "operationId": "get_sponsor_types_list", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}], "responses": {"200": {"schema": {"type": "array", "items": {"type": "string"}}, "description": "Success"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/sponsors/{sponsor_id}": {"delete": {"summary": "Delete a sponsor given its id", "tags": ["sponsors"], "operationId": "delete_sponsor", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Sponsor"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}}, "get": {"summary": "Fetch a sponsor given its id", "tags": ["sponsors"], "operationId": "get_sponsor", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Sponsor"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}, {"required": true, "type": "integer", "in": "path", "name": "sponsor_id"}], "put": {"summary": "Update a sponsor given its id", "tags": ["sponsors"], "operationId": "put_sponsor", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/SponsorPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "200": {"schema": {"$ref": "#/definitions/Sponsor"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}}, "/events/{event_id}/tickets/": {"get": {"summary": "Get tickets of the event", "tags": ["tickets"], "operationId": "get_tickets_list", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/Ticket"}}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/tickets/{ticket_id}": {"get": {"summary": "Get information about a ticket", "tags": ["tickets"], "operationId": "get_ticket", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/Ticket"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "ticket_id"}, {"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/tracks": {"get": {"summary": "List all tracks", "tags": ["tracks"], "operationId": "get_track_list", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/Track"}}, "description": "Success"}}}, "post": {"summary": "Create a track", "tags": ["tracks"], "operationId": "post_track_list", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/TrackPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/Track"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/tracks/page": {"get": {"summary": "List tracks in a paginated manner", "tags": ["tracks"], "operationId": "get_track_list_paginated", "parameters": [{"name": "start", "type": "integer", "in": "query", "default": 1, "description": "Serial number to start from"}, {"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"name": "limit", "type": "integer", "in": "query", "default": 20, "description": "Limit on the number of results"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/TrackPaginated"}, "description": "Success"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}]}, "/events/{event_id}/tracks/{track_id}": {"delete": {"summary": "Delete a track given its id", "tags": ["tracks"], "operationId": "delete_track", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Track"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}}, "get": {"summary": "Fetch a track given its id", "tags": ["tracks"], "operationId": "get_track", "parameters": [{"type": "string", "in": "header", "name": "If-None-Match", "description": "ETag saved by client for cached resource"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Track"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "event_id"}, {"required": true, "type": "integer", "in": "path", "name": "track_id"}], "put": {"summary": "Update a track given its id", "tags": ["tracks"], "operationId": "put_track", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/TrackPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "200": {"schema": {"$ref": "#/definitions/Track"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}}, "/login": {"post": {"tags": ["login"], "operationId": "post_login", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/Login"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/Token"}, "description": "Success"}, "401": {"description": "Authentication Failed"}}}}, "/users": {"get": {"summary": "List all users", "tags": ["users"], "operationId": "get_user_list", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/User"}}, "description": "Success"}}}, "post": {"summary": "Create a user", "tags": ["users"], "operationId": "post_user_list", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/UserPost"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/User"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}}}}, "/users/me": {"get": {"summary": "Fetch the current authenticated user", "tags": ["users"], "operationId": "get_user_self", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/User"}, "description": "Success"}, "404": {"description": "User not found"}}}}, "/users/me/events": {"get": {"summary": "Fetch the current authenticated user's events", "tags": ["users"], "operationId": "get_user_self_events", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/Event"}}, "description": "Success"}, "404": {"description": "User not found"}}}}, "/users/page": {"get": {"summary": "List users in a paginated manner", "tags": ["users"], "operationId": "get_user_list_paginated", "parameters": [{"name": "start", "type": "integer", "in": "query", "default": 1, "description": "Serial number to start from"}, {"name": "limit", "type": "integer", "in": "query", "default": 20, "description": "Limit on the number of results"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/UserPaginated"}, "description": "Success"}}}}, "/users/{user_id}": {"delete": {"summary": "Delete a user given its id", "tags": ["users"], "operationId": "delete_user", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/User"}, "description": "Success"}, "404": {"description": "User not found"}}}, "get": {"summary": "Fetch a user given its id", "tags": ["users"], "operationId": "get_user", "parameters": [{"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/User"}, "description": "Success"}, "404": {"description": "User not found"}}}, "parameters": [{"required": true, "type": "integer", "in": "path", "name": "user_id"}], "put": {"summary": "Update a user given its id", "tags": ["users"], "operationId": "put_user", "parameters": [{"required": true, "schema": {"$ref": "#/definitions/UserPut"}, "in": "body", "name": "payload"}, {"format": "mask", "type": "string", "in": "header", "description": "An optional fields mask", "name": "X-Fields"}], "responses": {"200": {"schema": {"$ref": "#/definitions/User"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}}}}, "tags": [{"description": "Default namespace", "name": "default"}, {"description": "Events", "name": "events"}, {"description": "Sessions", "name": "sessions"}, {"description": "Tracks", "name": "tracks"}, {"description": "Speakers", "name": "speakers"}, {"description": "Sponsors", "name": "sponsors"}, {"description": "Microlocations", "name": "microlocations"}, {"description": "Login", "name": "login"}, {"description": "Exports", "name": "exports"}, {"description": "Imports", "name": "imports"}, {"description": "Users", "name": "users"}, {"description": "Extras", "name": "extras"}, {"description": "Notifications", "name": "notifications"}, {"description": "Error Responses", "name": "errors"}, {"description": "Attendees", "name": "attendees"}, {"description": "Tickets", "name": "tickets"}], "consumes": ["application/json"], "host": "eventyay.com", "basePath": "/api/v1", "produces": ["application/json"]}