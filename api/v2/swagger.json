{"consumes": ["application/json"], "definitions": {"MicrolocationPost": {"type": "object", "properties": {"longitude": {"format": "float", "type": "number", "example": 0.0}, "floor": {"format": "int", "type": "integer", "example": 0}, "name": {"type": "string"}, "latitude": {"format": "float", "type": "number", "example": 0.0}, "room": {"type": "string"}}, "required": ["name"]}, "UserPost": {"type": "object", "properties": {"email": {"format": "email", "type": "string", "example": "email@domain.com"}, "password": {"type": "string"}}, "required": ["email", "password"]}, "SocialLinkPost": {"type": "object", "properties": {"link": {"type": "string"}, "name": {"type": "string"}}, "required": ["link", "name"]}, "EventPaginated": {"type": "object", "properties": {"previous": {"type": "string"}, "limit": {"type": "integer"}, "start": {"type": "integer"}, "next": {"type": "string"}, "results": {"type": "array", "items": {"$ref": "#/definitions/Event"}}, "count": {"type": "integer"}}}, "EventCopyright": {"type": "object", "properties": {"holder_url": {"format": "uri", "type": "string", "example": "http://website.com"}, "year": {"format": "int", "type": "integer", "example": 0}, "holder": {"type": "string"}, "logo": {"type": "string"}, "licence": {"type": "string"}, "licence_url": {"format": "uri", "type": "string", "example": "http://website.com"}}}, "SponsorPaginated": {"type": "object", "properties": {"previous": {"type": "string"}, "limit": {"type": "integer"}, "start": {"type": "integer"}, "next": {"type": "string"}, "results": {"type": "array", "items": {"$ref": "#/definitions/Sponsor"}}, "count": {"type": "integer"}}}, "SessionSpeaker": {"type": "object", "properties": {"name": {"type": "string"}, "id": {"format": "int", "type": "integer", "example": 0}, "organisation": {"type": "string"}}, "required": ["id"]}, "SocialLink": {"type": "object", "properties": {"name": {"type": "string"}, "link": {"type": "string"}, "id": {"format": "int", "type": "integer", "example": 0}}, "required": ["link", "name"]}, "Sponsor": {"type": "object", "properties": {"description": {"type": "string"}, "name": {"type": "string"}, "id": {"format": "int", "type": "integer", "example": 0}, "url": {"format": "uri", "type": "string", "example": "http://website.com"}, "logo": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "level": {"type": "string"}, "sponsor_type": {"type": "string"}}, "required": ["id", "name"]}, "SpeakerPost": {"type": "object", "properties": {"linkedin": {"type": "string"}, "email": {"format": "email", "type": "string", "example": "email@domain.com"}, "organisation": {"type": "string"}, "position": {"type": "string"}, "name": {"type": "string"}, "github": {"type": "string"}, "website": {"format": "uri", "type": "string", "example": "http://website.com"}, "country": {"type": "string"}, "twitter": {"type": "string"}, "mobile": {"type": "string"}, "photo": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "long_biography": {"type": "string"}, "facebook": {"type": "string"}, "short_biography": {"type": "string"}}, "required": ["country", "email", "name", "organisation"]}, "SponsorPost": {"type": "object", "properties": {"description": {"type": "string"}, "name": {"type": "string"}, "sponsor_type": {"type": "string"}, "url": {"format": "uri", "type": "string", "example": "http://website.com"}, "logo": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "level": {"type": "string"}}, "required": ["name"]}, "NotFoundError": {"type": "object", "properties": {"message": {"type": "string"}, "code": {"type": "integer", "example": 404}, "status": {"type": "string", "example": "NOT_FOUND"}, "field": {"type": "string"}}}, "Event": {"type": "object", "properties": {"searchable_location_name": {"type": "string"}, "copyright": {"$ref": "#/definitions/EventCopyright"}, "sub_topic": {"type": "string", "example": "Air"}, "name": {"type": "string"}, "id": {"format": "int", "type": "integer", "example": 0}, "background_url": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "schedule_published_on": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "ticket_url": {"format": "uri", "type": "string", "example": "http://website.com"}, "organizer_name": {"type": "string"}, "description": {"type": "string"}, "topic": {"type": "string", "example": "Auto, Boat & Air"}, "type": {"type": "string", "example": "Appearance or Signing"}, "code_of_conduct": {"type": "string"}, "timezone": {"type": "string"}, "creator": {"$ref": "#/definitions/EventCreator"}, "location_name": {"type": "string"}, "end_time": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "state": {"type": "string", "example": "Draft", "default": "Draft"}, "longitude": {"format": "float", "type": "number", "example": 0.0}, "email": {"format": "email", "type": "string", "example": "email@domain.com"}, "latitude": {"format": "float", "type": "number", "example": 0.0}, "social_links": {"type": "array", "items": {"$ref": "#/definitions/SocialLink"}}, "organizer_description": {"type": "string"}, "call_for_papers": {"$ref": "#/definitions/EventCFS"}, "version": {"$ref": "#/definitions/EventVersion"}, "start_time": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "logo": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "privacy": {"type": "string", "example": "public"}, "event_url": {"format": "uri", "type": "string", "example": "http://website.com"}}, "required": ["end_time", "id", "name", "start_time"]}, "TrackPost": {"type": "object", "properties": {"name": {"type": "string"}, "description": {"type": "string"}, "track_image_url": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "location": {"type": "string"}, "color": {"format": "color", "type": "string", "example": "green"}}, "required": ["color", "name"]}, "EventCFS": {"type": "object", "properties": {"end_date": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "privacy": {"type": "string", "example": "public"}, "start_date": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "timezone": {"type": "string"}, "announcement": {"type": "string"}}}, "Login": {"type": "object", "properties": {"email": {"format": "email", "type": "string", "example": "email@domain.com"}, "password": {"type": "string"}}, "required": ["email", "password"]}, "MicrolocationPaginated": {"type": "object", "properties": {"previous": {"type": "string"}, "limit": {"type": "integer"}, "start": {"type": "integer"}, "next": {"type": "string"}, "results": {"type": "array", "items": {"$ref": "#/definitions/Microlocation"}}, "count": {"type": "integer"}}}, "SessionPost": {"type": "object", "properties": {"comments": {"type": "string"}, "long_abstract": {"type": "string"}, "session_type_id": {"format": "int", "type": "integer", "example": 0}, "video": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "end_time": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "state": {"type": "string", "example": "pending"}, "short_abstract": {"type": "string"}, "track_id": {"format": "int", "type": "integer", "example": 0}, "signup_url": {"format": "uri", "type": "string", "example": "http://website.com"}, "start_time": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "microlocation_id": {"format": "int", "type": "integer", "example": 0}, "speaker_ids": {"type": "array", "items": {"format": "int", "type": "integer", "example": 0}}, "language": {"type": "string", "example": "German"}, "title": {"type": "string"}, "subtitle": {"type": "string"}, "slides": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "audio": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}}, "required": ["end_time", "start_time", "title"]}, "Microlocation": {"type": "object", "properties": {"floor": {"format": "int", "type": "integer", "example": 0}, "name": {"type": "string"}, "longitude": {"format": "float", "type": "number", "example": 0.0}, "id": {"format": "int", "type": "integer", "example": 0}, "latitude": {"format": "float", "type": "number", "example": 0.0}, "room": {"type": "string"}}, "required": ["id", "name"]}, "User": {"type": "object", "properties": {"last_access_time": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "user_detail": {"$ref": "#/definitions/UserDetail"}, "id": {"format": "int", "type": "integer", "example": 0}, "signup_time": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "email": {"format": "email", "type": "string", "example": "email@domain.com"}}, "required": ["email"]}, "Session": {"type": "object", "properties": {"comments": {"type": "string"}, "long_abstract": {"type": "string"}, "speakers": {"type": "array", "items": {"$ref": "#/definitions/SessionSpeaker"}}, "video": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "end_time": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "state": {"type": "string", "example": "pending"}, "short_abstract": {"type": "string"}, "signup_url": {"format": "uri", "type": "string", "example": "http://website.com"}, "id": {"format": "int", "type": "integer", "example": 0}, "start_time": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "audio": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "track": {"$ref": "#/definitions/SessionTrack"}, "session_type": {"$ref": "#/definitions/SessionType"}, "language": {"type": "string", "example": "German"}, "title": {"type": "string"}, "subtitle": {"type": "string"}, "microlocation": {"$ref": "#/definitions/SessionMicrolocation"}, "slides": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}}, "required": ["end_time", "id", "start_time", "title"]}, "NotAuthorizedError": {"type": "object", "properties": {"message": {"type": "string"}, "code": {"type": "integer", "example": 401}, "status": {"type": "string", "example": "NOT_AUTHORIZED"}, "field": {"type": "string"}}}, "SessionPaginated": {"type": "object", "properties": {"previous": {"type": "string"}, "limit": {"type": "integer"}, "start": {"type": "integer"}, "next": {"type": "string"}, "results": {"type": "array", "items": {"$ref": "#/definitions/Session"}}, "count": {"type": "integer"}}}, "EventComplete": {"type": "object", "properties": {"searchable_location_name": {"type": "string"}, "copyright": {"$ref": "#/definitions/EventCopyright"}, "sub_topic": {"type": "string", "example": "Air"}, "name": {"type": "string"}, "speakers": {"type": "array", "items": {"$ref": "#/definitions/Speaker"}}, "id": {"format": "int", "type": "integer", "example": 0}, "background_url": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "logo": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "ticket_url": {"format": "uri", "type": "string", "example": "http://website.com"}, "organizer_name": {"type": "string"}, "microlocations": {"type": "array", "items": {"$ref": "#/definitions/Microlocation"}}, "description": {"type": "string"}, "topic": {"type": "string", "example": "Auto, Boat & Air"}, "type": {"type": "string", "example": "Appearance or Signing"}, "sessions": {"type": "array", "items": {"$ref": "#/definitions/Session"}}, "code_of_conduct": {"type": "string"}, "timezone": {"type": "string"}, "creator": {"$ref": "#/definitions/EventCreator"}, "location_name": {"type": "string"}, "end_time": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "state": {"type": "string", "example": "Draft", "default": "Draft"}, "longitude": {"format": "float", "type": "number", "example": 0.0}, "email": {"format": "email", "type": "string", "example": "email@domain.com"}, "latitude": {"format": "float", "type": "number", "example": 0.0}, "social_links": {"type": "array", "items": {"$ref": "#/definitions/SocialLink"}}, "organizer_description": {"type": "string"}, "call_for_papers": {"$ref": "#/definitions/EventCFS"}, "tracks": {"type": "array", "items": {"$ref": "#/definitions/Track"}}, "event_url": {"format": "uri", "type": "string", "example": "http://website.com"}, "sponsors": {"type": "array", "items": {"$ref": "#/definitions/Sponsor"}}, "start_time": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "schedule_published_on": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "privacy": {"type": "string", "example": "public"}, "version": {"$ref": "#/definitions/EventVersion"}}, "required": ["end_time", "id", "name", "start_time"]}, "ValidationError": {"type": "object", "properties": {"message": {"type": "string"}, "code": {"type": "integer", "example": 400}, "status": {"type": "string", "example": "INVALID_FIELD"}, "field": {"type": "string"}}}, "TrackSession": {"type": "object", "properties": {"title": {"type": "string"}, "id": {"format": "int", "type": "integer", "example": 0}}, "required": ["id"]}, "EventCreator": {"type": "object", "properties": {"email": {"format": "email", "type": "string", "example": "email@domain.com"}, "id": {"format": "int", "type": "integer", "example": 0}}}, "SessionTypePost": {"type": "object", "properties": {"name": {"type": "string"}, "length": {"format": "float", "type": "number", "example": 0.0}}, "required": ["length", "name"]}, "SpeakerPaginated": {"type": "object", "properties": {"previous": {"type": "string"}, "limit": {"type": "integer"}, "start": {"type": "integer"}, "next": {"type": "string"}, "results": {"type": "array", "items": {"$ref": "#/definitions/Speaker"}}, "count": {"type": "integer"}}}, "TrackPaginated": {"type": "object", "properties": {"previous": {"type": "string"}, "limit": {"type": "integer"}, "start": {"type": "integer"}, "next": {"type": "string"}, "results": {"type": "array", "items": {"$ref": "#/definitions/Track"}}, "count": {"type": "integer"}}}, "InvalidServiceError": {"type": "object", "properties": {"message": {"type": "string"}, "code": {"type": "integer", "example": 400}, "status": {"type": "string", "example": "INVALID_SERVICE"}, "field": {"type": "string"}}}, "SessionMicrolocation": {"type": "object", "properties": {"name": {"type": "string"}, "id": {"format": "int", "type": "integer", "example": 0}}, "required": ["id"]}, "SpeakerSession": {"type": "object", "properties": {"title": {"type": "string"}, "id": {"format": "int", "type": "integer", "example": 0}}}, "EventVersion": {"type": "object", "properties": {"microlocations_ver": {"format": "int", "type": "integer", "example": 0}, "speakers_ver": {"format": "int", "type": "integer", "example": 0}, "tracks_ver": {"format": "int", "type": "integer", "example": 0}, "sessions_ver": {"format": "int", "type": "integer", "example": 0}, "event_ver": {"format": "int", "type": "integer", "example": 0}, "sponsors_ver": {"format": "int", "type": "integer", "example": 0}}}, "EventPost": {"type": "object", "properties": {"searchable_location_name": {"type": "string"}, "copyright": {"$ref": "#/definitions/EventCopyright"}, "sub_topic": {"type": "string", "example": "Air"}, "name": {"type": "string"}, "background_url": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "logo": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "ticket_url": {"format": "uri", "type": "string", "example": "http://website.com"}, "email": {"format": "email", "type": "string", "example": "email@domain.com"}, "description": {"type": "string"}, "topic": {"type": "string", "example": "Auto, Boat & Air"}, "type": {"type": "string", "example": "Appearance or Signing"}, "code_of_conduct": {"type": "string"}, "timezone": {"type": "string"}, "location_name": {"type": "string"}, "end_time": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "state": {"type": "string", "example": "Draft", "default": "Draft"}, "longitude": {"format": "float", "type": "number", "example": 0.0}, "organizer_name": {"type": "string"}, "latitude": {"format": "float", "type": "number", "example": 0.0}, "organizer_description": {"type": "string"}, "call_for_papers": {"$ref": "#/definitions/EventCFS"}, "start_time": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "schedule_published_on": {"format": "date-time", "type": "string", "example": "2016-06-06T11:22:33"}, "privacy": {"type": "string", "example": "public"}, "event_url": {"format": "uri", "type": "string", "example": "http://website.com"}}, "required": ["end_time", "name", "start_time"]}, "UserDetail": {"type": "object", "properties": {"details": {"type": "string"}, "contact": {"type": "string"}, "twitter": {"type": "string"}, "lastname": {"type": "string"}, "firstname": {"type": "string"}, "facebook": {"type": "string"}, "avatar": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}}}, "SessionTrack": {"type": "object", "properties": {"name": {"type": "string"}, "id": {"format": "int", "type": "integer", "example": 0}}, "required": ["id"]}, "SessionType": {"type": "object", "properties": {"name": {"type": "string"}, "id": {"format": "int", "type": "integer", "example": 0}, "length": {"format": "float", "type": "number", "example": 0.0}}, "required": ["id", "length", "name"]}, "Track": {"type": "object", "properties": {"description": {"type": "string"}, "sessions": {"type": "array", "items": {"$ref": "#/definitions/TrackSession"}}, "name": {"type": "string"}, "id": {"format": "int", "type": "integer", "example": 0}, "track_image_url": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "color": {"format": "color", "type": "string", "example": "green"}, "location": {"type": "string"}}, "required": ["color", "id", "name"]}, "UserPut": {"type": "object", "properties": {"user_detail": {"$ref": "#/definitions/UserDetail"}, "email": {"format": "email", "type": "string", "example": "email@domain.com"}}, "required": ["email"]}, "Speaker": {"type": "object", "properties": {"linkedin": {"type": "string"}, "email": {"format": "email", "type": "string", "example": "email@domain.com"}, "organisation": {"type": "string"}, "position": {"type": "string"}, "sessions": {"type": "array", "items": {"$ref": "#/definitions/SpeakerSession"}}, "name": {"type": "string"}, "github": {"type": "string"}, "website": {"format": "uri", "type": "string", "example": "http://website.com"}, "country": {"type": "string"}, "id": {"format": "int", "type": "integer", "example": 0}, "twitter": {"type": "string"}, "mobile": {"type": "string"}, "photo": {"format": "uri", "type": "string", "example": "http://website.com/item.ext"}, "long_biography": {"type": "string"}, "facebook": {"type": "string"}, "short_biography": {"type": "string"}}, "required": ["country", "email", "id", "name", "organisation"]}, "Token": {"type": "object", "properties": {"access_token": {"type": "string"}}}, "UserPaginated": {"type": "object", "properties": {"previous": {"type": "string"}, "limit": {"type": "integer"}, "start": {"type": "integer"}, "next": {"type": "string"}, "results": {"type": "array", "items": {"$ref": "#/definitions/User"}}, "count": {"type": "integer"}}}}, "tags": [{"description": "Default namespace", "name": "default"}, {"description": "Events", "name": "events"}, {"description": "Sessions", "name": "sessions"}, {"description": "Tracks", "name": "tracks"}, {"description": "Speakers", "name": "speakers"}, {"description": "Sponsors", "name": "sponsors"}, {"description": "Microlocations", "name": "microlocations"}, {"description": "Login", "name": "login"}, {"description": "Exports", "name": "exports"}, {"description": "Imports", "name": "imports"}, {"description": "Users", "name": "users"}, {"description": "Extras", "name": "extras"}, {"description": "Error Responses", "name": "errors"}], "responses": {"NotFoundError": {}, "ValidationError": {}, "MaskError": {"description": "When any error occurs on mask"}, "ParseError": {"description": "When a mask can't be parsed"}, "PermissionDeniedError": {}, "NotAuthorizedError": {}, "InvalidServiceError": {}}, "paths": {"/events": {"get": {"parameters": [{"in": "query", "type": "string", "name": "start_time_lt"}, {"name": "include", "in": "query", "type": "string", "description": "Comma separated list of additional fields to load. Supported: sessions,tracks,microlocations,speakers,sponsors)"}, {"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "query", "type": "string", "name": "sub_topic"}, {"in": "query", "type": "string", "name": "state"}, {"in": "query", "type": "string", "name": "end_time_lt"}, {"in": "query", "type": "string", "name": "topic"}, {"in": "query", "type": "string", "name": "type"}, {"in": "query", "type": "string", "name": "time_period"}, {"in": "query", "type": "string", "name": "start_time_gt"}, {"in": "query", "type": "string", "name": "privacy"}, {"in": "query", "type": "string", "name": "location"}, {"in": "query", "type": "string", "name": "end_time_gt"}, {"name": "contains", "in": "query", "type": "string", "description": "Contains the string in name and description"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_event_list", "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/EventComplete"}}, "description": "Success"}}, "tags": ["events"], "summary": "List all events"}, "post": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/EventPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "post_event_list", "responses": {"200": {"schema": {"$ref": "#/definitions/Event"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["events"], "summary": "Create an event"}}, "/events/page": {"get": {"parameters": [{"in": "query", "type": "string", "name": "start_time_lt"}, {"name": "include", "in": "query", "type": "string", "description": "Comma separated list of additional fields to load. Supported: sessions,tracks,microlocations,speakers,sponsors)"}, {"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "query", "type": "string", "name": "sub_topic"}, {"name": "limit", "in": "query", "type": "integer", "description": "Limit on the number of results", "default": 20}, {"in": "query", "type": "string", "name": "state"}, {"in": "query", "type": "string", "name": "end_time_lt"}, {"in": "query", "type": "string", "name": "topic"}, {"name": "start", "in": "query", "type": "integer", "description": "Serial number to start from", "default": 1}, {"in": "query", "type": "string", "name": "type"}, {"in": "query", "type": "string", "name": "time_period"}, {"in": "query", "type": "string", "name": "start_time_gt"}, {"in": "query", "type": "string", "name": "privacy"}, {"in": "query", "type": "string", "name": "location"}, {"in": "query", "type": "string", "name": "end_time_gt"}, {"name": "contains", "in": "query", "type": "string", "description": "Contains the string in name and description"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_event_list_paginated", "responses": {"200": {"schema": {"$ref": "#/definitions/EventPaginated"}, "description": "Success"}}, "tags": ["events"], "summary": "List events in a paginated manner"}}, "/events/{event_id}": {"parameters": [{"name": "event_id", "in": "path", "type": "integer", "description": null, "required": true}], "delete": {"parameters": [{"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "delete_event", "responses": {"200": {"schema": {"$ref": "#/definitions/Event"}, "description": "Success"}, "404": {"description": "Event not found"}}, "tags": ["events"], "summary": "Delete an event given its id"}, "put": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/EventPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "put_event", "responses": {"200": {"schema": {"$ref": "#/definitions/Event"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["events"], "summary": "Update an event given its id"}, "get": {"parameters": [{"name": "include", "in": "query", "type": "string", "description": "Comma separated list of additional fields to load. Supported: sessions,tracks,microlocations,speakers,sponsors)"}, {"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_event", "responses": {"200": {"schema": {"$ref": "#/definitions/EventComplete"}, "description": "Success"}, "404": {"description": "Event not found"}}, "tags": ["events"], "summary": "Fetch an event given its id"}}, "/events/{event_id}/event": {"parameters": [{"name": "event_id", "in": "path", "type": "integer", "description": null, "required": true}], "get": {"responses": {"200": {"schema": {"$ref": "#/definitions/EventComplete"}, "description": "Success"}, "404": {"description": "Event not found"}}, "summary": "Fetch an event given its id", "parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "tags": ["events"], "description": "Alternate endpoint for fetching an event.", "operationId": "get_event_webapp"}}, "/events/{event_id}/links": {"parameters": [{"name": "event_id", "in": "path", "type": "integer", "description": null, "required": true}], "get": {"parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_social_link_list", "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/SocialLink"}}, "description": "Success"}}, "tags": ["events"], "summary": "List all social links"}, "post": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/SocialLinkPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "post_social_link_list", "responses": {"200": {"schema": {"$ref": "#/definitions/SocialLink"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["events"], "summary": "Create a social link"}}, "/events/{event_id}/links/{link_id}": {"parameters": [{"in": "path", "type": "integer", "name": "link_id", "required": true}, {"in": "path", "type": "integer", "name": "event_id", "required": true}], "delete": {"parameters": [{"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "delete_social_link", "responses": {"200": {"schema": {"$ref": "#/definitions/SocialLink"}, "description": "Success"}}, "tags": ["events"], "summary": "Delete a social link given its id"}, "put": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/SocialLinkPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "put_social_link", "responses": {"200": {"schema": {"$ref": "#/definitions/SocialLink"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["events"], "summary": "Update a social link given its id"}}, "/events/{event_id}/microlocations": {"parameters": [{"in": "path", "type": "integer", "name": "event_id", "required": true}], "get": {"parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_microlocation_list", "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/Microlocation"}}, "description": "Success"}}, "tags": ["microlocations"], "summary": "List all microlocations"}, "post": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/MicrolocationPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "post_microlocation_list", "responses": {"200": {"schema": {"$ref": "#/definitions/Microlocation"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["microlocations"], "summary": "Create a microlocation"}}, "/events/{event_id}/microlocations/page": {"parameters": [{"in": "path", "type": "integer", "name": "event_id", "required": true}], "get": {"parameters": [{"name": "limit", "in": "query", "type": "integer", "description": "Limit on the number of results", "default": 20}, {"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"name": "start", "in": "query", "type": "integer", "description": "Serial number to start from", "default": 1}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_microlocation_list_paginated", "responses": {"200": {"schema": {"$ref": "#/definitions/MicrolocationPaginated"}, "description": "Success"}}, "tags": ["microlocations"], "summary": "List microlocations in a paginated manner"}}, "/events/{event_id}/microlocations/{microlocation_id}": {"parameters": [{"in": "path", "type": "integer", "name": "microlocation_id", "required": true}, {"in": "path", "type": "integer", "name": "event_id", "required": true}], "delete": {"parameters": [{"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "delete_microlocation", "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Microlocation"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}, "tags": ["microlocations"], "summary": "Delete a microlocation given its id"}, "put": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/MicrolocationPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "put_microlocation", "responses": {"400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "200": {"schema": {"$ref": "#/definitions/Microlocation"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["microlocations"], "summary": "Update a microlocation given its id"}, "get": {"parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_microlocation", "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Microlocation"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}, "tags": ["microlocations"], "summary": "Fetch a microlocation given its id"}}, "/events/{event_id}/sessions": {"parameters": [{"in": "path", "type": "integer", "name": "event_id", "required": true}], "get": {"parameters": [{"in": "query", "type": "string", "name": "start_time_lt"}, {"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"name": "order_by", "in": "query", "type": "string", "description": "Order by a field, example \"start_time.asc\" or \"end_time.desc\""}, {"in": "query", "type": "string", "name": "end_time_lt"}, {"in": "query", "type": "string", "name": "start_time_gt"}, {"in": "query", "type": "string", "name": "end_time_gt"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_session_list", "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/Session"}}, "description": "Success"}}, "tags": ["sessions"], "summary": "List all sessions"}, "post": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/SessionPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "post_session_list", "responses": {"200": {"schema": {"$ref": "#/definitions/Session"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["sessions"], "summary": "Create a session"}}, "/events/{event_id}/sessions/page": {"parameters": [{"in": "path", "type": "integer", "name": "event_id", "required": true}], "get": {"parameters": [{"in": "query", "type": "string", "name": "start_time_lt"}, {"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"name": "order_by", "in": "query", "type": "string", "description": "Order by a field, example \"start_time.asc\" or \"end_time.desc\""}, {"in": "query", "type": "string", "name": "end_time_lt"}, {"name": "start", "in": "query", "type": "integer", "description": "Serial number to start from", "default": 1}, {"in": "query", "type": "string", "name": "start_time_gt"}, {"in": "query", "type": "string", "name": "end_time_gt"}, {"name": "limit", "in": "query", "type": "integer", "description": "Limit on the number of results", "default": 20}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_session_list_paginated", "responses": {"200": {"schema": {"$ref": "#/definitions/SessionPaginated"}, "description": "Success"}}, "tags": ["sessions"], "summary": "List sessions in a paginated manner"}}, "/events/{event_id}/sessions/types": {"parameters": [{"in": "path", "type": "integer", "name": "event_id", "required": true}], "get": {"parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_session_type_list", "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/SessionType"}}, "description": "Success"}}, "tags": ["sessions"], "summary": "List all session types"}, "post": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/SessionTypePost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "post_session_type_list", "responses": {"200": {"schema": {"$ref": "#/definitions/SessionType"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["sessions"], "summary": "Create a session type"}}, "/events/{event_id}/sessions/types/{type_id}": {"parameters": [{"in": "path", "type": "integer", "name": "type_id", "required": true}, {"in": "path", "type": "integer", "name": "event_id", "required": true}], "delete": {"parameters": [{"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "delete_session_type", "responses": {"200": {"schema": {"$ref": "#/definitions/SessionType"}, "description": "Success"}}, "tags": ["sessions"], "summary": "Delete a session type given its id"}, "put": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/SessionTypePost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "put_session_type", "responses": {"200": {"schema": {"$ref": "#/definitions/SessionType"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["sessions"], "summary": "Update a session type given its id"}}, "/events/{event_id}/sessions/{session_id}": {"parameters": [{"in": "path", "type": "integer", "name": "session_id", "required": true}, {"in": "path", "type": "integer", "name": "event_id", "required": true}], "delete": {"parameters": [{"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "delete_session", "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Session"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}, "tags": ["sessions"], "summary": "Delete a session given its id"}, "put": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/SessionPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "put_session", "responses": {"400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "200": {"schema": {"$ref": "#/definitions/Session"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["sessions"], "summary": "Update a session given its id"}, "get": {"parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_session", "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Session"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}, "tags": ["sessions"], "summary": "Fetch a session given its id"}}, "/events/{event_id}/speakers": {"parameters": [{"in": "path", "type": "integer", "name": "event_id", "required": true}], "get": {"parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}], "operationId": "get_speaker_list", "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/Speaker"}}, "description": "Success"}}, "tags": ["speakers"], "summary": "List all speakers"}, "post": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/SpeakerPost"}}], "operationId": "post_speaker_list", "responses": {"400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}, "200": {"schema": {"$ref": "#/definitions/Speaker"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "201": {"description": "Resource created successfully"}}, "tags": ["speakers"], "summary": "Create a speaker"}}, "/events/{event_id}/speakers/page": {"parameters": [{"in": "path", "type": "integer", "name": "event_id", "required": true}], "get": {"parameters": [{"name": "limit", "in": "query", "type": "integer", "description": "Limit on the number of results", "default": 20}, {"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"name": "start", "in": "query", "type": "integer", "description": "Serial number to start from", "default": 1}], "operationId": "get_speaker_list_paginated", "responses": {"200": {"schema": {"$ref": "#/definitions/SpeakerPaginated"}, "description": "Success"}}, "tags": ["speakers"], "summary": "List speakers in a paginated manner"}}, "/events/{event_id}/speakers/{speaker_id}": {"parameters": [{"in": "path", "type": "integer", "name": "speaker_id", "required": true}, {"in": "path", "type": "integer", "name": "event_id", "required": true}], "delete": {"operationId": "delete_speaker", "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}, "200": {"schema": {"$ref": "#/definitions/Speaker"}, "description": "Success"}}, "tags": ["speakers"], "summary": "Delete a speaker given its id"}, "put": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/SpeakerPost"}}], "operationId": "put_speaker", "responses": {"400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "200": {"schema": {"$ref": "#/definitions/Speaker"}, "description": "Success"}}, "tags": ["speakers"], "summary": "Update a speaker given its id"}, "get": {"parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}], "operationId": "get_speaker", "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}, "200": {"schema": {"$ref": "#/definitions/Speaker"}, "description": "Success"}}, "tags": ["speakers"], "summary": "Fetch a speaker given its id"}}, "/events/{event_id}/sponsors": {"parameters": [{"in": "path", "type": "integer", "name": "event_id", "required": true}], "get": {"parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_sponsor_list", "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/Sponsor"}}, "description": "Success"}}, "tags": ["sponsors"], "summary": "List all sponsors"}, "post": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/SponsorPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "post_sponsor_list", "responses": {"200": {"schema": {"$ref": "#/definitions/Sponsor"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["sponsors"], "summary": "Create a sponsor"}}, "/events/{event_id}/sponsors/page": {"parameters": [{"in": "path", "type": "integer", "name": "event_id", "required": true}], "get": {"parameters": [{"name": "limit", "in": "query", "type": "integer", "description": "Limit on the number of results", "default": 20}, {"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"name": "start", "in": "query", "type": "integer", "description": "Serial number to start from", "default": 1}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_sponsor_list_paginated", "responses": {"200": {"schema": {"$ref": "#/definitions/SponsorPaginated"}, "description": "Success"}}, "tags": ["sponsors"], "summary": "List sponsors in a paginated manner"}}, "/events/{event_id}/sponsors/types": {"parameters": [{"in": "path", "type": "integer", "name": "event_id", "required": true}], "get": {"parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}], "operationId": "get_sponsor_types_list", "responses": {"200": {"schema": {"type": "array", "items": {"type": "string"}}, "description": "Success"}}, "tags": ["sponsors"], "summary": "List all sponsor types"}}, "/events/{event_id}/sponsors/{sponsor_id}": {"parameters": [{"in": "path", "type": "integer", "name": "sponsor_id", "required": true}, {"in": "path", "type": "integer", "name": "event_id", "required": true}], "delete": {"parameters": [{"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "delete_sponsor", "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Sponsor"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}, "tags": ["sponsors"], "summary": "Delete a sponsor given its id"}, "put": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/SponsorPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "put_sponsor", "responses": {"400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "200": {"schema": {"$ref": "#/definitions/Sponsor"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["sponsors"], "summary": "Update a sponsor given its id"}, "get": {"parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_sponsor", "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Sponsor"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}, "tags": ["sponsors"], "summary": "Fetch a sponsor given its id"}}, "/events/{event_id}/tracks": {"parameters": [{"in": "path", "type": "integer", "name": "event_id", "required": true}], "get": {"parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_track_list", "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/Track"}}, "description": "Success"}}, "tags": ["tracks"], "summary": "List all tracks"}, "post": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/TrackPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "post_track_list", "responses": {"200": {"schema": {"$ref": "#/definitions/Track"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Event does not exist"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["tracks"], "summary": "Create a track"}}, "/events/{event_id}/tracks/page": {"parameters": [{"in": "path", "type": "integer", "name": "event_id", "required": true}], "get": {"parameters": [{"name": "limit", "in": "query", "type": "integer", "description": "Limit on the number of results", "default": 20}, {"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"name": "start", "in": "query", "type": "integer", "description": "Serial number to start from", "default": 1}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_track_list_paginated", "responses": {"200": {"schema": {"$ref": "#/definitions/TrackPaginated"}, "description": "Success"}}, "tags": ["tracks"], "summary": "List tracks in a paginated manner"}}, "/events/{event_id}/tracks/{track_id}": {"parameters": [{"in": "path", "type": "integer", "name": "track_id", "required": true}, {"in": "path", "type": "integer", "name": "event_id", "required": true}], "delete": {"parameters": [{"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "delete_track", "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Track"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}, "tags": ["tracks"], "summary": "Delete a track given its id"}, "put": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/TrackPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "put_track", "responses": {"400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "200": {"schema": {"$ref": "#/definitions/Track"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["tracks"], "summary": "Update a track given its id"}, "get": {"parameters": [{"name": "If-None-Match", "in": "header", "type": "string", "description": "ETag saved by client for cached resource"}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_track", "responses": {"400": {"schema": {"$ref": "#/definitions/InvalidServiceError"}, "description": "Service does not belong to event"}, "200": {"schema": {"$ref": "#/definitions/Track"}, "description": "Success"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Service not found"}}, "tags": ["tracks"], "summary": "Fetch a track given its id"}}, "/login": {"post": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/Login"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "post_login", "responses": {"200": {"schema": {"$ref": "#/definitions/Token"}, "description": "Success"}, "401": {"description": "Authentication Failed"}}, "tags": ["login"]}}, "/users": {"get": {"parameters": [{"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_user_list", "responses": {"200": {"schema": {"type": "array", "items": {"$ref": "#/definitions/User"}}, "description": "Success"}}, "tags": ["users"], "summary": "List all users"}, "post": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/UserPost"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "post_user_list", "responses": {"200": {"schema": {"$ref": "#/definitions/User"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation error"}, "201": {"description": "Resource created successfully"}}, "tags": ["users"], "summary": "Create a user"}}, "/users/page": {"get": {"parameters": [{"name": "limit", "in": "query", "type": "integer", "description": "Limit on the number of results", "default": 20}, {"name": "start", "in": "query", "type": "integer", "description": "Serial number to start from", "default": 1}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_user_list_paginated", "responses": {"200": {"schema": {"$ref": "#/definitions/UserPaginated"}, "description": "Success"}}, "tags": ["users"], "summary": "List users in a paginated manner"}}, "/users/{user_id}": {"parameters": [{"in": "path", "type": "integer", "name": "user_id", "required": true}], "delete": {"parameters": [{"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "delete_user", "responses": {"200": {"schema": {"$ref": "#/definitions/User"}, "description": "Success"}, "404": {"description": "User not found"}}, "tags": ["users"], "summary": "Delete a user given its id"}, "put": {"parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/UserPut"}}, {"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "put_user", "responses": {"200": {"schema": {"$ref": "#/definitions/User"}, "description": "Success"}, "400": {"schema": {"$ref": "#/definitions/ValidationError"}, "description": "Validation Error"}, "404": {"schema": {"$ref": "#/definitions/NotFoundError"}, "description": "Object/Event not found"}, "401": {"schema": {"$ref": "#/definitions/NotAuthorizedError"}, "description": "Authentication failure"}}, "tags": ["users"], "summary": "Update a user given its id"}, "get": {"parameters": [{"in": "header", "type": "string", "name": "X-Fields", "description": "An optional fields mask", "format": "mask"}], "operationId": "get_user", "responses": {"200": {"schema": {"$ref": "#/definitions/User"}, "description": "Success"}, "404": {"description": "User not found"}}, "tags": ["users"], "summary": "Fetch a user given its id"}}}, "basePath": "/api/v2", "swagger": "2.0", "produces": ["application/json"], "info": {"title": "Organizer Server APIs", "description": "Open Event Organizer APIs", "version": "2.0"}}
